// <auto-generated />
using System;
using KFA.SupportAssistant.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KFA.SupportAssistant.Web.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0-rc.2.23480.1");

            modelBuilder.Entity("KFA.SupportAssistant.Core.ContributorAggregate.Contributor", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.ToTable("Contributors");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Core.Models.CommunicationMessage", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("message_id");

                    b.Property<byte[]>("Attachments")
                        .HasColumnType("BLOB")
                        .HasColumnName("attachments");

                    b.Property<string>("Details")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("details");

                    b.Property<string>("From")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("from");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("message");

                    b.Property<byte>("MessageType")
                        .HasMaxLength(255)
                        .HasColumnType("INTEGER")
                        .HasColumnName("message_type");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<byte?>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("INTEGER")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("title");

                    b.Property<string>("To")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("to");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.ToTable("tbl_communication_messages");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Core.Models.DataDevice", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("device_id");

                    b.Property<string>("DeviceCaption")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("device_caption");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("device_code");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("device_name");

                    b.Property<string>("DeviceNumber")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("device_number");

                    b.Property<string>("DeviceRight")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("device_right");

                    b.Property<string>("StationID")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("station_id");

                    b.Property<string>("Station_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeOfDevice")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("type_of_device");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("StationID");

                    b.ToTable("tbl_data_devices");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.CommandDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("command_id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT")
                        .HasColumnName("action");

                    b.Property<string>("ActiveState")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("active_state");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT")
                        .HasColumnName("category");

                    b.Property<string>("CommandName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT")
                        .HasColumnName("command_name");

                    b.Property<string>("CommandText")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("command_text");

                    b.Property<long>("ImageId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("image_id");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("image_path");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_enabled");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_published");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<string>("ShortcutKey")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("shortcut_key");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.ToTable("tbl_command_details");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.ComputerAnydesk", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("anydesk_id");

                    b.Property<string>("AnyDeskNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("anydesk_number");

                    b.Property<string>("CostCentreCode")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("cost_centre_code");

                    b.Property<string>("CostCentre_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("device_name");

                    b.Property<string>("NameOfUser")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("name_of_user");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.Property<byte?>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("INTEGER")
                        .HasColumnName("type");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("CostCentreCode");

                    b.ToTable("tbl_computer_anydesks");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.CostCentre", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("cost_centre_code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<string>("Region")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("region");

                    b.Property<string>("SupplierCodePrefix")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("supplier_code_prefix");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.ToTable("tbl_cost_centres");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.DeviceGuid", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("guid");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.ToTable("tbl_device_guids");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.ItemGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("group_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("ParentGroupId")
                        .HasColumnType("TEXT")
                        .HasColumnName("parent_group_id");

                    b.Property<string>("ParentGroup_Caption")
                        .HasColumnType("TEXT");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("ParentGroupId");

                    b.ToTable("tbl_item_groups");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.LeasedPropertiesAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("leased_property_account_id");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("TEXT")
                        .HasColumnName("account_number");

                    b.Property<decimal>("CommencementRent")
                        .HasColumnType("TEXT")
                        .HasColumnName("commencement_rent");

                    b.Property<string>("CostCentreCode")
                        .HasColumnType("TEXT")
                        .HasColumnName("cost_centre_code");

                    b.Property<string>("CostCentre_Caption")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentRent")
                        .HasColumnType("TEXT")
                        .HasColumnName("current_rent");

                    b.Property<string>("LandlordAddress")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("landlord_address");

                    b.Property<DateTime>("LastReviewDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("last_review_date");

                    b.Property<DateTime>("LeasedOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("leased_on");

                    b.Property<string>("LedgerAccountId")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT")
                        .HasColumnName("ledger_account_id");

                    b.Property<string>("LedgerAccount_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("CostCentreCode");

                    b.ToTable("tbl_leased_properties_accounts");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.LedgerAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("ledger_account_id");

                    b.Property<string>("CostCentreCode")
                        .HasColumnType("TEXT")
                        .HasColumnName("cost_centre_code");

                    b.Property<string>("CostCentre_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("GroupName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("group_name");

                    b.Property<bool>("IncreaseWithDebit")
                        .HasColumnType("INTEGER")
                        .HasColumnName("increase_with_debit");

                    b.Property<string>("LedgerAccountCode")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ledger_account_code");

                    b.Property<string>("LedgerAccount_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("MainGroup")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("main_group");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<string>("Supplier_Caption")
                        .HasColumnType("TEXT");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("CostCentreCode");

                    b.HasIndex("LedgerAccountCode")
                        .IsUnique();

                    b.ToTable("tbl_ledger_accounts");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.LetPropertiesAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("let_property_account_id");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("TEXT")
                        .HasColumnName("account_number");

                    b.Property<decimal>("CommencementRent")
                        .HasColumnType("TEXT")
                        .HasColumnName("commencement_rent");

                    b.Property<string>("CostCentreCode")
                        .HasColumnType("TEXT")
                        .HasColumnName("cost_centre_code");

                    b.Property<string>("CostCentre_Caption")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentRent")
                        .HasColumnType("TEXT")
                        .HasColumnName("current_rent");

                    b.Property<DateTime>("LastReviewDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("last_review_date");

                    b.Property<string>("LedgerAccountId")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT")
                        .HasColumnName("ledger_account_id");

                    b.Property<string>("LedgerAccount_Caption")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LetOn")
                        .HasColumnType("TEXT")
                        .HasColumnName("let_on");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<string>("TenantAddress")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("tenant_address");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("CostCentreCode");

                    b.HasIndex("LedgerAccountId");

                    b.ToTable("tbl_let_properties_accounts");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.PasswordSafe", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("password_id");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("details");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.Property<string>("Reminder")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("reminder");

                    b.Property<string>("UsersVisibleTo")
                        .HasColumnType("TEXT")
                        .HasColumnName("users_visible_to");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.ToTable("tbl_password_safes");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.QRCodesRequest", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("qr_code_request_id");

                    b.Property<string>("CostCentreCode")
                        .HasColumnType("TEXT")
                        .HasColumnName("cost_centre_code");

                    b.Property<string>("CostCentre_Caption")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDuplicate")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_duplicate");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<string>("RequestData")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("request_data");

                    b.Property<string>("ResponseData")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("response_data");

                    b.Property<byte?>("ResponseStatus")
                        .HasMaxLength(255)
                        .HasColumnType("INTEGER")
                        .HasColumnName("response_status");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT")
                        .HasColumnName("time");

                    b.Property<string>("TimsMachineUsed")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("tims_machine_used");

                    b.Property<string>("VATClass")
                        .HasMaxLength(5)
                        .HasColumnType("TEXT")
                        .HasColumnName("vat_class");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("CostCentreCode");

                    b.ToTable("tbl_qr_codes_requests");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.QRRequestItem", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("sale_id");

                    b.Property<string>("CashSaleNumber")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT")
                        .HasColumnName("cash_sale_number");

                    b.Property<string>("CostCentreCode")
                        .HasColumnType("TEXT")
                        .HasColumnName("cost_centre_code");

                    b.Property<string>("CostCentre_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("HsCode")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT")
                        .HasColumnName("hs_code");

                    b.Property<string>("HsName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("hs_name");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(16)
                        .HasColumnType("TEXT")
                        .HasColumnName("item_code");

                    b.Property<string>("ItemName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("item_name");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<decimal>("PercentageDiscount")
                        .HasColumnType("TEXT")
                        .HasColumnName("percentage_discount");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("TEXT")
                        .HasColumnName("quantity");

                    b.Property<string>("RequestID")
                        .HasColumnType("TEXT")
                        .HasColumnName("request_id");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT")
                        .HasColumnName("time");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("TEXT")
                        .HasColumnName("total_amount");

                    b.Property<string>("UnitOfMeasure")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT")
                        .HasColumnName("unit_of_measure");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT")
                        .HasColumnName("unit_price");

                    b.Property<decimal>("VATAmount")
                        .HasColumnType("TEXT")
                        .HasColumnName("vat_amount");

                    b.Property<string>("VATClass")
                        .HasMaxLength(4)
                        .HasColumnType("TEXT")
                        .HasColumnName("vat_class");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("CostCentreCode");

                    b.HasIndex("RequestID");

                    b.ToTable("tbl_qr_request_items");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.StockItem", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("item_code");

                    b.Property<string>("Barcode")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("barcode");

                    b.Property<string>("GroupId")
                        .HasColumnType("TEXT")
                        .HasColumnName("group_id");

                    b.Property<string>("Group_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("item_name");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("tbl_stock_items");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.Supplier", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("supplier_id");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("address");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT")
                        .HasColumnName("contact_person");

                    b.Property<string>("CostCentreCode")
                        .HasColumnType("TEXT")
                        .HasColumnName("cost_centre_code");

                    b.Property<string>("CostCentre_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("postal_code");

                    b.Property<string>("SupplierCode")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("supplier_code");

                    b.Property<string>("SupplierLedgerAccountId")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT")
                        .HasColumnName("supplier_ledger_account_id");

                    b.Property<string>("Supplier_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT")
                        .HasColumnName("telephone");

                    b.Property<string>("Town")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("town");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("CostCentreCode");

                    b.HasIndex("SupplierCode")
                        .IsUnique();

                    b.ToTable("tbl_suppliers");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.SystemRight", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("right_id");

                    b.Property<bool>("IsCompulsory")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_compulsory");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<string>("RightName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("right_name");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.ToTable("tbl_system_rights");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.SystemUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("user_id");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("contact");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("email_address");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("expiration_date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_active");

                    b.Property<DateTime>("MaturityDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("maturity_date");

                    b.Property<string>("NameOfTheUser")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("name_of_the_user");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB")
                        .HasColumnName("password_salt");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("role_id");

                    b.Property<string>("Role_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("username");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("tbl_system_users");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.TimsMachine", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("machine_id");

                    b.Property<string>("ClassType")
                        .HasMaxLength(5)
                        .HasColumnType("TEXT")
                        .HasColumnName("class_type");

                    b.Property<byte>("CurrentStatus")
                        .HasColumnType("INTEGER")
                        .HasColumnName("current_status");

                    b.Property<string>("DomainName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("domain_name");

                    b.Property<string>("ExternalIPAddress")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("external_ip_address");

                    b.Property<string>("ExternalPortNumber")
                        .HasMaxLength(8)
                        .HasColumnType("TEXT")
                        .HasColumnName("external_port_number");

                    b.Property<string>("InternalIPAddress")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("internal_ip_address");

                    b.Property<string>("InternalPortNumber")
                        .HasMaxLength(8)
                        .HasColumnType("TEXT")
                        .HasColumnName("internal_port_number");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<bool>("ReadyForUse")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ready_for_use");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT")
                        .HasColumnName("serial_number");

                    b.Property<string>("TimsName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("tims_name");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.ToTable("tbl_tims_machines");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.UserAuditTrail", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("audit_id");

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_date");

                    b.Property<short>("ActivityEnumNumber")
                        .HasColumnType("INTEGER")
                        .HasColumnName("activity_enum_number");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("category");

                    b.Property<string>("CommandId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("command_id");

                    b.Property<string>("Command_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("data");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("LoginId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("login_id");

                    b.Property<string>("Login_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<string>("OldValues")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("old_values");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("CommandId");

                    b.HasIndex("LoginId");

                    b.ToTable("tbl_user_audit_trails");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.UserLogin", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("login_id");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("device_id");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("from_date");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<DateTime>("UptoDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("upto_date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("user_id");

                    b.Property<string>("User_Caption")
                        .HasColumnType("TEXT");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_user_logins");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.UserRight", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("user_right_id");

                    b.Property<string>("CommandId")
                        .HasColumnType("TEXT")
                        .HasColumnName("command_id");

                    b.Property<string>("Command_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<string>("ObjectName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("object_name");

                    b.Property<string>("RightId")
                        .HasColumnType("TEXT")
                        .HasColumnName("right_id");

                    b.Property<string>("Right_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("role_id");

                    b.Property<string>("Role_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("user_id");

                    b.Property<string>("User_Caption")
                        .HasColumnType("TEXT");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("CommandId");

                    b.HasIndex("RightId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_user_rights");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("expiration_date");

                    b.Property<DateTime>("MaturityDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("maturity_date");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("role_name");

                    b.Property<short>("RoleNumber")
                        .HasColumnType("INTEGER")
                        .HasColumnName("role_number");

                    b.Property<string>("UserRole_Caption")
                        .HasColumnType("TEXT");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.ToTable("tbl_user_roles");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.Verification", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("verification_id");

                    b.Property<DateTime>("DateOfVerification")
                        .HasColumnType("TEXT")
                        .HasColumnName("date_of_verification");

                    b.Property<string>("LoginId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("login_id");

                    b.Property<string>("Login_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<long>("RecordId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("record_id");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("table_name");

                    b.Property<string>("VerificationName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("verification_name");

                    b.Property<long>("VerificationRecordId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("verification_record_id");

                    b.Property<long>("VerificationTypeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("verification_type_id");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("LoginId");

                    b.ToTable("tbl_verifications");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.VerificationRight", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("verification_right_id");

                    b.Property<string>("DeviceId")
                        .HasColumnType("TEXT")
                        .HasColumnName("device_id");

                    b.Property<string>("Device_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT")
                        .HasColumnName("user_id");

                    b.Property<string>("UserRoleId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("user_role_id");

                    b.Property<string>("UserRole_Caption")
                        .HasColumnType("TEXT");

                    b.Property<string>("User_Caption")
                        .HasColumnType("TEXT");

                    b.Property<long>("VerificationTypeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("verification_type_id");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserRoleId")
                        .IsUnique();

                    b.ToTable("tbl_verification_rights");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.VerificationType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("verification_type_id");

                    b.Property<string>("Category")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("category");

                    b.Property<string>("Narration")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("narration");

                    b.Property<string>("VerificationTypeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("verification_type_name");

                    b.Property<long?>("___DateInserted___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_added")
                        .HasColumnOrder(100);

                    b.Property<long?>("___DateUpdated___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("date_updated")
                        .HasColumnOrder(101);

                    b.Property<byte?>("___ModificationStatus___")
                        .HasColumnType("INTEGER")
                        .HasColumnName("modification_status")
                        .HasColumnOrder(103);

                    b.HasKey("Id");

                    b.ToTable("tbl_verification_types");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Core.Models.DataDevice", b =>
                {
                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.CostCentre", "Station")
                        .WithMany("DataDevices")
                        .HasForeignKey("StationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.ComputerAnydesk", b =>
                {
                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.CostCentre", "CostCentre")
                        .WithMany("ComputerAnydesks")
                        .HasForeignKey("CostCentreCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostCentre");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.ItemGroup", b =>
                {
                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.ItemGroup", "ParentGroup")
                        .WithMany("ItemGroups")
                        .HasForeignKey("ParentGroupId");

                    b.Navigation("ParentGroup");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.LeasedPropertiesAccount", b =>
                {
                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.CostCentre", "CostCentre")
                        .WithMany("LeasedPropertiesAccounts")
                        .HasForeignKey("CostCentreCode");

                    b.Navigation("CostCentre");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.LedgerAccount", b =>
                {
                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.CostCentre", "CostCentre")
                        .WithMany("LedgerAccounts")
                        .HasForeignKey("CostCentreCode");

                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.LeasedPropertiesAccount", "LeasedPropertiesAccount")
                        .WithOne("LedgerAccount")
                        .HasForeignKey("KFA.SupportAssistant.Infrastructure.Models.LedgerAccount", "LedgerAccountCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostCentre");

                    b.Navigation("LeasedPropertiesAccount");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.LetPropertiesAccount", b =>
                {
                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.CostCentre", "CostCentre")
                        .WithMany("LetPropertiesAccounts")
                        .HasForeignKey("CostCentreCode");

                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.LedgerAccount", "LedgerAccount")
                        .WithMany()
                        .HasForeignKey("LedgerAccountId");

                    b.Navigation("CostCentre");

                    b.Navigation("LedgerAccount");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.QRCodesRequest", b =>
                {
                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.CostCentre", "CostCentre")
                        .WithMany("QRCodesRequests")
                        .HasForeignKey("CostCentreCode");

                    b.Navigation("CostCentre");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.QRRequestItem", b =>
                {
                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.CostCentre", "CostCentre")
                        .WithMany("QRRequestItems")
                        .HasForeignKey("CostCentreCode");

                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.QRCodesRequest", "QRCodesRequest")
                        .WithMany("QRRequestItems")
                        .HasForeignKey("RequestID");

                    b.Navigation("CostCentre");

                    b.Navigation("QRCodesRequest");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.StockItem", b =>
                {
                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.ItemGroup", "Group")
                        .WithMany("StockItems")
                        .HasForeignKey("GroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.Supplier", b =>
                {
                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.CostCentre", "CostCentre")
                        .WithMany("Suppliers")
                        .HasForeignKey("CostCentreCode");

                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.LedgerAccount", "LedgerAccount")
                        .WithOne("Supplier")
                        .HasForeignKey("KFA.SupportAssistant.Infrastructure.Models.Supplier", "SupplierCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostCentre");

                    b.Navigation("LedgerAccount");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.SystemUser", b =>
                {
                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.UserRole", "Role")
                        .WithMany("SystemUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.UserAuditTrail", b =>
                {
                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.CommandDetail", "Command")
                        .WithMany("UserAuditTrails")
                        .HasForeignKey("CommandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.UserLogin", "Login")
                        .WithMany("UserAuditTrails")
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Command");

                    b.Navigation("Login");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.UserLogin", b =>
                {
                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.SystemUser", "User")
                        .WithMany("UserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.UserRight", b =>
                {
                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.CommandDetail", "CommandDetail")
                        .WithMany()
                        .HasForeignKey("CommandId");

                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.SystemRight", "Right")
                        .WithMany("UserRights")
                        .HasForeignKey("RightId");

                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.UserRole", "Role")
                        .WithMany("UserRights")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.SystemUser", "User")
                        .WithMany("UserRights")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommandDetail");

                    b.Navigation("Right");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.Verification", b =>
                {
                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.UserLogin", "Login")
                        .WithMany("Verifications")
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Login");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.VerificationRight", b =>
                {
                    b.HasOne("KFA.SupportAssistant.Core.Models.DataDevice", "Device")
                        .WithMany("VerificationRights")
                        .HasForeignKey("DeviceId");

                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.SystemUser", "User")
                        .WithMany("VerificationRights")
                        .HasForeignKey("UserId");

                    b.HasOne("KFA.SupportAssistant.Infrastructure.Models.UserRole", "UserRole")
                        .WithOne("VerificationRight")
                        .HasForeignKey("KFA.SupportAssistant.Infrastructure.Models.VerificationRight", "UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("User");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Core.Models.DataDevice", b =>
                {
                    b.Navigation("VerificationRights");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.CommandDetail", b =>
                {
                    b.Navigation("UserAuditTrails");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.CostCentre", b =>
                {
                    b.Navigation("ComputerAnydesks");

                    b.Navigation("DataDevices");

                    b.Navigation("LeasedPropertiesAccounts");

                    b.Navigation("LedgerAccounts");

                    b.Navigation("LetPropertiesAccounts");

                    b.Navigation("QRCodesRequests");

                    b.Navigation("QRRequestItems");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.ItemGroup", b =>
                {
                    b.Navigation("ItemGroups");

                    b.Navigation("StockItems");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.LeasedPropertiesAccount", b =>
                {
                    b.Navigation("LedgerAccount");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.LedgerAccount", b =>
                {
                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.QRCodesRequest", b =>
                {
                    b.Navigation("QRRequestItems");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.SystemRight", b =>
                {
                    b.Navigation("UserRights");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.SystemUser", b =>
                {
                    b.Navigation("UserLogins");

                    b.Navigation("UserRights");

                    b.Navigation("VerificationRights");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.UserLogin", b =>
                {
                    b.Navigation("UserAuditTrails");

                    b.Navigation("Verifications");
                });

            modelBuilder.Entity("KFA.SupportAssistant.Infrastructure.Models.UserRole", b =>
                {
                    b.Navigation("SystemUsers");

                    b.Navigation("UserRights");

                    b.Navigation("VerificationRight");
                });
#pragma warning restore 612, 618
        }
    }
}
