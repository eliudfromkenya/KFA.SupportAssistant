@using KFA.SupportAssistant.RCL.Models
@using KFA.SupportAssistant.RCL.State.MainTitle
@inject IDispatcher dispatcher
@inject IState<MainTitleState> mainTitleState
@inject IUserService userService
@inject IState<MainMenusState> state
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<div class="top-0">
    <div class="w-full">
        <a class="main-title font-[68px] w-full mx-3 my-1" href=""><img src="./images/icon.png" class="w-24 h-24 mx-auto my-1 " /></a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable w-full" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column w-full">

        @if (state.Value.Error != null)
        {
            <div class="flex flex-col w-full">
                <div class="text-red-one underline text-xl">
                    Error
                </div>
                <div class="text-red-two text-xl">
                  Unable to load menu;  @state.Value.Error.Message
                </div>
            </div>
        }
        else
        {
            @foreach (var item in state.Value.Menus)
            {
                <div class="nav-item px-9 w-full">
                    <NavLink class="nav-link my-0 w-full" href="@item.URI">
                        @{
                            <img src="@item.SVGIcon" class="img-fluid bg-blue-three px-5 my-0 me-5 text-blue-three w-[4px] h-[4px]" />
                            <div>&nbsp;&nbsp;&nbsp;</div>
                            @item.Text
                        }
                    </NavLink>
                </div>
            }
        }

    </nav>
</div>

@code{
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
       
    } 
    //Match="NavLinkMatch.All
}