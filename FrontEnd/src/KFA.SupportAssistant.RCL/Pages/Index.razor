@page "/index"
@inject NavigationManager navigationManager
@inject ILocalStorageService localStorageService
@inject IAuthorizationService authorizationService

@if (IsUserAuthenticated)
{
    <h3><b>@user?.Identity?.Name</b> is logged in!!!</h3>
    <br />
    <p>Is Publisher : @IsPublisher</p>
    <p>Is Senior Employee : @IsSeniorEmployee</p>
}
else
{
    <h3><b>User is logged out</b></h3>
}

<p>Hello World - Test @Count</p>



@code {

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationStateTask { get; set; }
    ClaimsPrincipal? user;

    bool IsUserAuthenticated;
    bool IsPublisher;
    bool IsSeniorEmployee;

    public int Count { get; set; } = 400;

    protected override async Task OnInitializedAsync()
    {
        if (authenticationStateTask != null)
            user = (await authenticationStateTask).User;

        if (user?.Identity?.IsAuthenticated ?? false)
            IsUserAuthenticated = true;

        if (user?.IsInRole("Publisher")==true)
            IsPublisher = true;

        if (user != null && (await authorizationService.AuthorizeAsync(user, "SeniorEmployee")).Succeeded)
            IsSeniorEmployee = true;
    }
}
